name: Auto Blog Entry on Commit

on:
  push:
    branches: [ main ]
    paths:
      - 'content/*.md'
      - '!content/auto-generated/**'

permissions:
  contents: write

jobs:
  create-blog-entry:
    runs-on: ubuntu-latest
    if: "!contains(github.event.head_commit.message, '[skip-blog]') && !contains(github.event.head_commit.message, '[no-blog]') && !contains(github.event.head_commit.message, 'fix') && !contains(github.event.head_commit.message, 'Fix') && !contains(github.event.head_commit.message, 'update') && !contains(github.event.head_commit.message, 'Update') && !contains(github.event.head_commit.message, 'Auto-generated')"
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
        
    - name: Check for new markdown files
      id: check-files
      run: |
        # Check if any new .md files were added to content directory (excluding auto-generated)
        NEW_MD_FILES=$(git diff-tree --no-commit-id --name-status -r ${{ github.sha }} | grep -E '^A\s+content/[^/]+\.md$' | grep -v 'auto-generated' || true)
        if [ -z "$NEW_MD_FILES" ]; then
          echo "No new markdown files added to content directory"
          echo "skip=true" >> $GITHUB_OUTPUT
        else
          echo "New markdown files detected:"
          echo "$NEW_MD_FILES"
          echo "skip=false" >> $GITHUB_OUTPUT
        fi
        
    - name: Create auto-generated blog entry
      if: steps.check-files.outputs.skip != 'true'
      run: |
        # Create auto-generated directory if it doesn't exist
        mkdir -p content/auto-generated
        
        # Get commit info
        COMMIT_HASH="${{ github.sha }}"
        COMMIT_MESSAGE="${{ github.event.head_commit.message }}"
        COMMIT_AUTHOR="${{ github.event.head_commit.author.name }}"
        COMMIT_DATE=$(date -u +"%Y-%m-%d %H:%M")
        SLUG="commit-$(date -u +"%Y%m%d-%H%M%S")"
        
        # Create blog entry
        cat > "content/auto-generated/${SLUG}.md" << EOF
        Title: Code Update: ${COMMIT_MESSAGE}
        Date: ${COMMIT_DATE}
        Category: Development
        Tags: git, commits, development
        Slug: ${SLUG}
        Authors: ${COMMIT_AUTHOR}
        Summary: Automatic blog entry for commit ${COMMIT_HASH:0:7}
        
        # Development Update
        
        **Commit:** \`${COMMIT_HASH:0:7}\`  
        **Author:** ${COMMIT_AUTHOR}  
        **Date:** ${COMMIT_DATE}  
        
        ## Changes Made
        
        ${COMMIT_MESSAGE}
        
        ## Files Modified
        
        EOF
        
        # Add list of modified files
        echo "The following files were modified in this commit:" >> "content/auto-generated/${SLUG}.md"
        echo "" >> "content/auto-generated/${SLUG}.md"
        git diff-tree --no-commit-id --name-only -r ${{ github.sha }} | while read file; do
          echo "- \`${file}\`" >> "content/auto-generated/${SLUG}.md"
        done
        

        
    - name: Commit and push changes
      if: steps.check-files.outputs.skip != 'true'
      run: |
        git config --local user.email "action@github.com"
        git config --local user.name "GitHub Action"
        git add .
        git commit -m "[skip-blog] Auto-generated blog entry for commit ${{ github.sha }}" || exit 0
        git push